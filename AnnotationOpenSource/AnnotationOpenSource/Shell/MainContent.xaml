<UserControl x:Class="AnnotationOpenSource.Shell.MainContent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AnnotationOpenSource.Shell"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:MB="clr-namespace:AnnotationOpenSource.Framework"
             xmlns:const="clr-namespace:AnnotationOpenSource.Framework"
             xmlns:xceed="http://schemas.xceed.com/wpf/xaml/toolkit" d:DataContext="{d:DesignInstance Type=local:MainContentViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Base;component/Resources/Resources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="ScrollViewerCtrlTemplate" TargetType="{x:Type ScrollViewer}">
                <Setter Property="OverridesDefaultStyle"
            Value="True" />
                <Setter Property="Background" Value="{StaticResource Table_BackgroundBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" />
                                <Border BorderThickness="0,0,0,0" BorderBrush="{StaticResource FontColorBrush}"
                            Grid.Column="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}">
                                    <ScrollBar x:Name="PART_VerticalScrollBar"
                                Style="{StaticResource ViewerScrollBar}"
                                Value="{TemplateBinding VerticalOffset}"
                                Maximum="{TemplateBinding ScrollableHeight}"
                                ViewportSize="{TemplateBinding ViewportHeight}"
                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                Background="{TemplateBinding Background}"/>
                                </Border>
                                <Border BorderThickness="0,0,0,0" BorderBrush="{StaticResource FontColorBrush}"
                            Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}">
                                    <ScrollBar x:Name="PART_HorizontalScrollBar"
                                Style="{StaticResource ViewerScrollBar}"
                                Orientation="Horizontal"
                                Grid.Column="0"
                                Value="{TemplateBinding HorizontalOffset}"
                                Maximum="{TemplateBinding ScrollableWidth}"
                                ViewportSize="{TemplateBinding ViewportWidth}"
                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                Background="{TemplateBinding Background}"/>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="VisionToolListBox" TargetType="ListBox">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                                <ScrollViewer x:Name="ScrollBar"
                                                    Style="{StaticResource ScrollViewerCtrlTemplate}"
                                                    Padding="{TemplateBinding Padding}"
                                                    Focusable="False"
                                                    CanContentScroll="True">
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="MoveThumbTemplate" TargetType="{x:Type MB:MoveThumb}">
                <Rectangle Fill="Transparent"/>
            </ControlTemplate>
            <ControlTemplate x:Key="ResizeDecoratorTemplate" TargetType="{x:Type Control}">
                <Grid>
                    <MB:ResizeThumb Height="3" Cursor="SizeNS" Margin="0 -4 0 0"
                       VerticalAlignment="Top" HorizontalAlignment="Stretch"/>
                    <MB:ResizeThumb Width="3" Cursor="SizeWE" Margin="-4 0 0 0"
                       VerticalAlignment="Stretch" HorizontalAlignment="Left"/>
                    <MB:ResizeThumb Width="3" Cursor="SizeWE" Margin="0 0 -4 0"
                       VerticalAlignment="Stretch" HorizontalAlignment="Right"/>
                    <MB:ResizeThumb Height="3" Cursor="SizeNS" Margin="0 0 0 -4"
                       VerticalAlignment="Bottom" HorizontalAlignment="Stretch"/>
                    <MB:ResizeThumb Width="7" Height="7" Cursor="SizeNWSE" Margin="-6 -6 0 0"
                       VerticalAlignment="Top" HorizontalAlignment="Left"/>
                    <MB:ResizeThumb Width="7" Height="7" Cursor="SizeNESW" Margin="0 -6 -6 0"
                       VerticalAlignment="Top" HorizontalAlignment="Right"/>
                    <MB:ResizeThumb Width="7" Height="7" Cursor="SizeNESW" Margin="-6 0 0 -6"
                       VerticalAlignment="Bottom" HorizontalAlignment="Left"/>
                    <MB:ResizeThumb Width="7" Height="7" Cursor="SizeNWSE" Margin="0 0 -6 -6"
                       VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="DesignerItemTemplate" TargetType="ContentControl">
                <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                    <MB:MoveThumb Template="{StaticResource MoveThumbTemplate}" Cursor="SizeAll"/>
                    <Control Template="{StaticResource ResizeDecoratorTemplate}"/>
                    <ContentPresenter Content="{TemplateBinding ContentControl.Content}"/>
                </Grid>
            </ControlTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="5*"/>
            <RowDefinition Height="5"/>
            <RowDefinition Height="0.58*"/>
        </Grid.RowDefinitions>


        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.6*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="30"/>
            </Grid.RowDefinitions>
            <ListBox Grid.Column="0" ItemsSource="{Binding FileBox}" SelectedItem="{Binding SelectedFile}" SelectedIndex="{Binding SelectedFileIndex}" ScrollViewer.HorizontalScrollBarVisibility="Auto"
                 ScrollViewer.VerticalScrollBarVisibility="Auto" Visibility="{Binding NavigationVisibility}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Height="Auto" Margin="0,0,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="{Binding FileName, Mode=OneWay}" HorizontalAlignment="Left" TextAlignment="Center" Margin="0"/>
                            <CheckBox Grid.Column="1" IsChecked="{Binding Done, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>

            </ListBox>
            <const:ZoomBorder Grid.Column="1" x:Name="border" ClipToBounds="True" Background="Gray">
                <Image Name="ImageBorder"  Source="{Binding StationAWindow}" Stretch="Uniform"  UseLayoutRounding="True" SnapsToDevicePixels="True" VerticalAlignment="Top" MB:SizeObserver.Observe="True" 
                       MB:SizeObserver.ObservedWidth="{Binding ActualWidth, Mode=OneWayToSource}" MB:SizeObserver.ObservedHeight="{Binding ActualHeight, Mode=OneWayToSource}"/>
            </const:ZoomBorder>
            <!--TextBox Grid.Row="1" Grid.Column="1" Text="{Binding OCRResult}"/-->
            <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="1">
                <CheckBox IsChecked="{Binding IsTrain}" Content="Train" Margin="5"/>
                <CheckBox IsChecked="{Binding IsTest}" Content="Test" Margin="5"/>
                <CheckBox IsChecked="{Binding IsValid}" Content="Valid" Margin="5"/>
            </StackPanel>
            <!--Image Grid.Column="1" Source="{Binding StationAWindow}"/-->
            <!--ItemsControl ItemsSource="{Binding RectItems}" Grid.Column="1">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="Canvas.Left" Value="{Binding X}"/>
                        <Setter Property="Canvas.Top" Value="{Binding Y}"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Rectangle Width="{Binding Width}" Height="{Binding Height}" Fill="Black">

                        </Rectangle>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl-->
            <!--Canvas Grid.Column="1">
                <ContentControl   Width="{Binding RectWidth, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Height="{Binding RectHeight, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                   Canvas.Left="{Binding RectX, Mode=TwoWay}"
                    Canvas.Top="{Binding RectY, Mode=TwoWay}"
                    Template="{StaticResource DesignerItemTemplate}">
                    <Rectangle Fill="Red" IsHitTestVisible="False" Opacity="0.1"/>
                </ContentControl>
            </Canvas-->
            <!--ContentControl Width="130"
                    MinWidth="50"
                    Height="130"
                    MinHeight="50"
                    Canvas.Top="150"
                    Canvas.Left="150"
                    Template="{StaticResource DesignerItemTemplate}">
                    <Path Fill="Blue"
            Data="M 0,5 5,0 10,5 5,10 Z"
            Stretch="Fill"
            IsHitTestVisible="False"/>
                </ContentControl>
            </Canvas-->
            <!--Canvas Grid.Column="1" x:Name="LayoutRoot">
               
                    <i:Interaction.Behaviors>
                        <MB:MouseBehaviour 
                        MouseX="{Binding PanelX, Mode=TwoWay}"
                        MouseY="{Binding PanelY, Mode=TwoWay}"
                        />
                    </i:Interaction.Behaviors>

                    <Rectangle 
                    x:Name="testSquare"
                    Fill="Transparent" Height="{Binding RectHeight}"
                    Stroke="Black"
                    Width="{Binding RectWidth}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Bottom"
                    Canvas.Left="{Binding RectX, Mode=TwoWay}"
                    Canvas.Top="{Binding RectY, Mode=TwoWay}"  >

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown" >
                                <i:InvokeCommandAction 
                                Command="{Binding ElementName=testSquare, Path=DataContext.LeftMouseButtonDown}"
                                CommandParameter="{Binding}" />
                            </i:EventTrigger>

                            <i:EventTrigger EventName="PreviewMouseUp" >
                                <i:InvokeCommandAction 
                                Command="{Binding ElementName=testSquare, Path=DataContext.LeftMouseButtonUp}"
                                CommandParameter="{Binding}" />
                            </i:EventTrigger>

                            <i:EventTrigger EventName="PreviewMouseMove" >
                                <i:InvokeCommandAction 
                                Command="{Binding ElementName=testSquare, Path=DataContext.PreviewMouseMove}"
                                CommandParameter="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                    </Rectangle>
             
            </Canvas-->
            <Grid Grid.Column="2">
                <TabControl>
                    <TabItem Header="Run">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="0.5*"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <DataGrid AutoGenerateColumns="False" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" CanUserAddRows="False" ItemsSource="{Binding EnableRegionCollection}" 
                                          CanUserResizeRows="True" AreRowDetailsFrozen="True" HeadersVisibility="All" SelectedIndex="{Binding SelectedRegionIndex}" SelectedItem="{Binding SelectedRegion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          FontSize="18" FontFamily="Sora Regular" Padding="-1" VerticalScrollBarVisibility="Visible">
                                    <DataGrid.Columns>

                                        <DataGridTextColumn Header="Shape" Binding="{Binding Key, Mode=TwoWay}">
                                            <DataGridTextColumn.ElementStyle>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Padding" Value="0"/>
                                                    <Setter Property="HorizontalAlignment" Value="Left"/>
                                                    <Setter Property="Margin" Value="15,0,0,0"/>
                                                    <Setter Property="FontWeight" Value="Normal"/>
                                                    <Setter Property="FontSize" Value="16"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                    <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True"/>
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="X" Binding="{Binding X, UpdateSourceTrigger=PropertyChanged}" />
                                        <DataGridTextColumn Header="Y" Binding="{Binding Y, UpdateSourceTrigger=PropertyChanged}" />
                                        <DataGridTextColumn Header="Height" Binding="{Binding Height, UpdateSourceTrigger=PropertyChanged}">
                                            <DataGridTextColumn.ElementStyle>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Padding" Value="0"/>
                                                    <Setter Property="HorizontalAlignment" Value="Left"/>
                                                    <Setter Property="Margin" Value="15,0,0,0"/>
                                                    <Setter Property="FontWeight" Value="Normal"/>
                                                    <Setter Property="FontSize" Value="16"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                    <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True"/>
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Width" Binding="{Binding Width, UpdateSourceTrigger=PropertyChanged}" />
                                        <!--DataGridCheckBoxColumn Header="Enable" Binding="{Binding Enable, UpdateSourceTrigger=PropertyChanged}">
                                            <DataGridCheckBoxColumn.ElementStyle>
                                                <Style TargetType="CheckBox">
                                                    <Setter Property="Padding" Value="0"/>
                                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                                </Style>
                                            </DataGridCheckBoxColumn.ElementStyle>
                                        </DataGridCheckBoxColumn-->
                                    </DataGrid.Columns>

                                </DataGrid>

                            </Grid>
                            <Grid Grid.Row="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="2*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="1" Margin="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <ComboBox ItemsSource="{Binding CharBox}" Width="100" Height="30" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="14" VerticalAlignment="Center" Padding="0" SelectedItem="{Binding SelectedChar}" Margin="0,0,0,0" />
                                    <ComboBox Grid.Column="1" ItemsSource="{Binding NumberBox}" Height="30" Width="100" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="14" VerticalAlignment="Center" Padding="0" SelectedItem="{Binding SelectedChar}" Margin="0,0,0,0" />
                                </Grid>
                                <!--xceed:PropertyGrid ShowSearchBox="False" ShowSortOptions="False" FontFamily="Sora Regular" FontSize="16" ShowSummary="False" NameColumnWidth="190" SelectedObject="{Binding Configuration}" PropertyNameLeftPadding="10"/-->
                                <Grid Grid.Row="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Button Grid.Column="0" Content="New" Foreground="Black" Command="{Binding ClickNewBoxCommand}" Width="{Binding ActualWidth, ElementName=NavigationPanel, Mode=OneWay}" Height="{Binding ActualHeight, ElementName=NavigationPanel, Mode=OneWay}"/>
                                    <Button Grid.Column="1" Content="Delete" Foreground="Black" Command="{Binding ClickDeleteBoxCommand}" Width="{Binding ActualWidth, ElementName=NavigationPanel, Mode=OneWay}" Height="{Binding ActualHeight, ElementName=NavigationPanel, Mode=OneWay}"/>
                                    <Button Grid.Column="2" Content="Next" Foreground="Black" Command="{Binding ClickNextBoxCommand}" Width="{Binding ActualWidth, ElementName=NavigationPanel, Mode=OneWay}" Height="{Binding ActualHeight, ElementName=NavigationPanel, Mode=OneWay}"/>

                                </Grid>
                            </Grid>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Train">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <ListBox Grid.Row="1" HorizontalAlignment="Stretch" Margin="10" VerticalAlignment="Stretch" FontSize="12" 
                                     ScrollViewer.VerticalScrollBarVisibility="Visible" ItemsSource="{Binding DisplayCollection, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedDisplay}"/>
                            </Grid>
                            <Grid Grid.Row="1">
                                <xceed:PropertyGrid ShowSearchBox="False" ShowSortOptions="False" FontFamily="Sora Regular" FontSize="16" ShowSummary="False" NameColumnWidth="190" SelectedObject="{Binding Configuration}" PropertyNameLeftPadding="10"/>
                            </Grid>
                        </Grid>
                    </TabItem>
                </TabControl>

            </Grid>
        </Grid>

        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="80*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="17*"/>
                <ColumnDefinition Width="63*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="80*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="80*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="80*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Content="OpenFolder" Foreground="Black" Command="{Binding ClickFileCommand}" Width="{Binding ActualWidth, ElementName=NavigationPanel, Mode=OneWay}" Height="{Binding ActualHeight, ElementName=NavigationPanel, Mode=OneWay}"/>
            <Button Grid.Column="2" Content="Train Tool" Foreground="Black" Command="{Binding ClickProductionCommand}" Width="{Binding ActualWidth, ElementName=NavigationPanel, Mode=OneWay}" Height="{Binding ActualHeight, ElementName=NavigationPanel, Mode=OneWay}" Grid.ColumnSpan="2">
            </Button>
            <Button Grid.Column="4" Content="Test2" Foreground="Black" Command="{Binding ClickTeachCommand}" Width="{Binding ActualWidth, ElementName=NavigationPanel, Mode=OneWay}" Height="{Binding ActualHeight, ElementName=NavigationPanel, Mode=OneWay}" Grid.ColumnSpan="2">
            </Button>
            <Button Grid.Column="6" Content="Run" Foreground="Black" Command="{Binding ClickRunCommand}" Width="{Binding ActualWidth, ElementName=NavigationPanel, Mode=OneWay}" Height="{Binding ActualHeight, ElementName=NavigationPanel, Mode=OneWay}" Grid.ColumnSpan="2">
            </Button>
            <Button Grid.Column="8" Content="Create Annotations" Foreground="Black" Command="{Binding ClickCreateAnnotationCommand}" Width="{Binding ActualWidth, ElementName=NavigationPanel, Mode=OneWay}" Height="{Binding ActualHeight, ElementName=NavigationPanel, Mode=OneWay}" Grid.ColumnSpan="2"/>
        </Grid>
    </Grid>
</UserControl>
